name: Create Issue by Label

on:
  issues:
    types: [ labeled ]

env:
  EVENT: ${{ toJson(github.event) }}
  GITHUB_OWNER: JackTestHook
  GITHUB_MAIN_REPOSITORY: test
  GITHUB_PROJECT_NUMBER: "1"
  E2E_PIPELINE: "Review,Ready For Test,Testing"
  GITHUB_REPOSITORY_TEST: test
  GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}

jobs:
  create-backport-issue:
    if: contains(github.event.label.name, 'backport-needed/')
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-${{ github.event.label.name }}
      cancel-in-progress: true
    name: Create Backport Issue  
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Install
        run: |
          pip install -r .github/workflows/bot/requirements.txt

      - name: Create Backport Issue
        run: |
          python .github/workflows/bot.py "$EVENT"

  create-gui-issue:
    if: contains(github.event.label.name, 'require-ui/')
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-${{ github.event.label.name }}
      cancel-in-progress: true
    name: Create GUI Issue  
    runs-on: ubuntu-latest
    env:
      EVENT: ${{ toJson(github.event) }}
      GITHUB_OWNER: JackTestHook
      GITHUB_MAIN_REPOSITORY: test
      GITHUB_PROJECT_NUMBER: "1"
      E2E_PIPELINE: "Review,Ready For Test,Testing"
      GITHUB_REPOSITORY_TEST: test
      GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Install
        run: |
          pip install -r .github/workflows/bot/requirements.txt
      
      - name: Create GUI Issue
        run: |
          python .github/workflows/bot.py "$EVENT"